<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.andy.recruitment.dao.recruitment.mapper.RecruitmentOrganizationMapper">
    <resultMap id="baseResultMap"
      type="com.andy.recruitment.dao.recruitment.entity.RecruitmentOrganizationDO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="recruitment_id" property="recruitmentId" jdbcType="BIGINT"/>
        <result column="organization_id" property="organizationId" jdbcType="BIGINT"/>
        <result column="department_id" property="departmentId" jdbcType="BIGINT"/>
        <result column="created_by" property="createdBy" jdbcType="VARCHAR"/>
        <result column="created_time" property="createdTime" jdbcType="TIMESTAMP"/>
        <result column="updated_by" property="updatedBy" jdbcType="VARCHAR"/>
        <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="baseColumnList">
        id,
        recruitment_id,
        organization_id,
        department_id,
        created_by,
        created_time,
        updated_by,
        updated_time
    </sql>

    <select id="select" resultMap="baseResultMap"
      parameterType="com.andy.recruitment.dao.recruitment.entity.RecruitmentOrganizationQuery">
        select
        <include refid="baseColumnList"/>
        from recruitment_organization_info
        <where>
            <if test="recruitmentId != null">
                and recruitment_id = #{recruitmentId,jdbcType=BIGINT}
            </if>
            <if test="organizationId != null">
                and organization_id = #{organizationId,jdbcType=BIGINT}
            </if>
            <if test="departmentId != null">
                and department_id = #{departmentId,jdbcType=BIGINT}
            </if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
      parameterType="com.andy.recruitment.dao.recruitment.entity.RecruitmentOrganizationDO">
        insert into recruitment_organization_info (<include refid="baseColumnList"/>)
        values(
        #{id,jdbcType=BIGINT},
        #{recruitmentId,jdbcType=BIGINT},
        #{organizationId,jdbcType=BIGINT},
        #{departmentId,jdbcType=BIGINT},
        #{createdBy, jdbcType=VARCHAR},
        #{createdTime, jdbcType=TIMESTAMP},
        #{updatedBy, jdbcType=VARCHAR},
        #{updatedTime, jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="update"
      parameterType="com.andy.recruitment.dao.recruitment.entity.RecruitmentOrganizationDO">
        update recruitment_organization_info
        <set>
            <if test="recruitmentId != null">
                recruitment_id = #{recruitmentId,jdbcType=BIGINT},
            </if>
            <if test="organizationId != null">
                organization_id = #{organizationId,jdbcType=BIGINT},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="delete"
      parameterType="com.andy.recruitment.dao.recruitment.entity.RecruitmentOrganizationQuery">
        delete from recruitment_organization_info where recruitment_id = #{recruitmentId,jdbcType=BIGINT} and department_id = #{departmentId,jdbcType=BIGINT}
    </delete>
</mapper>