<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.andy.recruitment.dao.category.mapper.CategoryMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.andy.recruitment.dao.category.entity.CategoryDO">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="category_id" property="categoryId" jdbcType="BIGINT"/>
        <result column="category_name" property="categoryName" jdbcType="VARCHAR"/>
        <result column="level" property="level" jdbcType="INTEGER"/>
        <result column="parent_id" property="parentId" jdbcType="BIGINT"/>
        <result column="path" property="path" jdbcType="VARCHAR"/>
        <result column="created_by" property="createdBy" jdbcType="VARCHAR"/>
        <result column="created_time" property="createdTime" jdbcType="TIMESTAMP"/>
        <result column="updated_by" property="updatedBy" jdbcType="VARCHAR"/>
        <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, category_id, category_name, `level`, parent_id, path, created_by, created_time, updated_by, updated_time
    </sql>

    <select id="select" resultMap="BaseResultMap"
      parameterType="com.andy.recruitment.dao.category.entity.CategoryQuery">
        select
        <include refid="Base_Column_List"/>
        from recruitment_category
        <where>
            <if test="categoryId != null">
                and category_id = #{categoryId, jdbcType=BIGINT}
            </if>
            <if test="categoryNameLike != null and categoryNameLike != ''">
                and category_name like CONCAT('%', #{categoryNameLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="categoryName != null and categoryName != ''">
                and category_name = #{categoryName,jdbcType=VARCHAR}
            </if>
            <if test="level != null">
                and `level` = #{level, jdbcType=INTEGER}
            </if>
            <if test="parentId != null">
                and parent_id = #{parentId, jdbcType=BIGINT}
            </if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
      parameterType="com.andy.recruitment.dao.category.entity.CategoryDO">
        insert into recruitment_category (
        <include refid="Base_Column_List"/>
        )
        values(
        #{id, jdbcType=BIGINT},
        #{categoryId, jdbcType=BIGINT},
        #{categoryName, jdbcType=VARCHAR},
        #{level,  jdbcType=INTEGER},
        #{parentId, jdbcType=BIGINT},
        #{path, jdbcType=VARCHAR},
        #{createdBy, jdbcType=VARCHAR},
        #{createdTime, jdbcType=TIMESTAMP},
        #{updatedBy, jdbcType=VARCHAR},
        #{updatedTime, jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="update" parameterType="com.andy.recruitment.dao.category.entity.CategoryDO">
        update recruitment_category
        <set>
            <if test="categoryName != null and categoryName != ''">
                category_name = #{categoryName, jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                `level` = #{level, jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId, jdbcType=BIGINT},
            </if>
            <if test="path != null and path != ''">
                path = #{path, jdbcType=VARCHAR},
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                updated_by = #{updatedBy, jdbcType=VARCHAR},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime, jdbcType=TIMESTAMP},
            </if>
        </set>
        where id =#{id, jdbcType=BIGINT}
    </update>

</mapper>
